plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.android.gms.oss-licenses-plugin'
}

import com.android.ddmlib.AndroidDebugBridge
import com.android.ddmlib.NullOutputReceiver

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.braffdev.steganofy"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
        animationsDisabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation project(':lib-steganofy')
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'org.apache.commons:commons-io:1.3.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'org.koin:koin-android:2.2.0'
    implementation 'org.koin:koin-android-viewmodel:2.2.0'

    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.assertj:assertj-core:3.18.1'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.koin:koin-test:2.2.0'

    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.1-alpha02'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'org.assertj:assertj-core:3.18.1'

}

/**
 * Pushes all files from the androidTest/res/raw directory to the connected devices
 */
task pushFilesToDevices {
    def location = "${project.projectDir}/src/androidTest/res/raw/"
    def targetLocation = "/storage/emulated/0/Download/steganofy-test/"
    def files = new File(location).listFiles()
    AndroidDebugBridge.initIfNeeded(false)

    def bridge = AndroidDebugBridge.createBridge(android.adbExecutable.path, false)
    doLast {
        bridge.devices.each { device ->
            println "Clearing $targetLocation"
            device.executeShellCommand("rm -rf $targetLocation", NullOutputReceiver.receiver)
            println "Pushing files to ${device.name}"
            files.each { file ->
                def targetFile = "$targetLocation${file.name}"
                device.pushFile(file.absolutePath, targetFile)
                println("Pushed file $file.name to $targetFile")
            }
        }
    }
}

tasks.whenTaskAdded { taskItem ->
    if (taskItem.name.contains("assemble") && taskItem.name.endsWith("AndroidTest")) {
        taskItem.dependsOn pushFilesToDevices
    }
}